name: Release
on:
  workflow_dispatch:
  release:
    types: [created]

permissions: read-all

jobs:
  args:
    runs-on: ubuntu-latest
    outputs:
      commit-date: ${{ steps.ldflags.outputs.commit-date }}
      commit: ${{ steps.ldflags.outputs.commit }}
      version: ${{ steps.ldflags.outputs.version }}
      tree-state: ${{ steps.ldflags.outputs.tree-state }}
    steps:
      - id: checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # tag=v4.2.1
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "commit-date=$(git log --date=iso8601-strict -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"
          echo "commit=$GITHUB_SHA" >> "$GITHUB_OUTPUT"
          echo "version=$(git describe --tags --always --dirty | cut -c2-)" >> "$GITHUB_OUTPUT"
          echo "tree-state=$(if git diff --quiet; then echo "clean"; else echo "dirty"; fi)" >> "$GITHUB_OUTPUT"
  build:
    permissions:
      id-token: write # To sign the provenance.
      contents: write # To upload assets to release.
      actions: read # To read the workflow path.
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.0.0 # tag=v2.0.0
    with:
      go-version: 1.22
      config-file: .slsa-goreleaser/${{matrix.os}}-${{matrix.arch}}.yaml
      evaluated-envs: "COMMIT_DATE:${{needs.args.outputs.commit-date}}, COMMIT:${{needs.args.outputs.commit}}, VERSION:${{needs.args.outputs.version}}, TREE_STATE:${{needs.args.outputs.tree-state}}"

  container:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    permissions:
      packages: write
    steps:
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # tag=v5.0.2
        with:
          go-version: '1.22.x'
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # tag=v4.2.1
        with:
          force-tags: true
      - uses: ko-build/setup-ko@3aebd0597dc1e9d1a26bcfdb7cbeb19c131d3037 # tag=v0.7
      - id: registry-login
        env:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${password}" | ko login ghcr.io --username "${username}" --password-stdin
      - id: build
        env:
          KO_DOCKER_REPO: "ghcr.io/jenrik/alertmanager-logger-webhook"
          TAG: ${{ github.ref_name }}
        run: |
          set -e
          export IMAGE="$(ko build --platform=all --bare --tags=latest,${TAG})"
          if [ -z "$IMAGE" ]; then
            exit 1
          fi
          echo "generated image: $IMAGE"
          echo "image=$(echo "$IMAGE" | cut -d '@' -f 1)" >> "$GITHUB_OUTPUT"
          echo "digest=$(echo "$IMAGE" | cut -d '@' -f 2)" >> "$GITHUB_OUTPUT"

  provenance:
    needs: [ container ]
    permissions:
      actions: read # for detecting the Github Actions environment.
      id-token: write # for creating OIDC tokens for signing.
      packages: write # for uploading attestations.
    if: startsWith(github.ref, 'refs/tags/')
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0 # tag=v2.0.0
    with:
      image: ${{ needs.container.outputs.image }}
      digest: ${{ needs.container.outputs.digest }}
      registry-username: ${{ github.actor }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
